<!--plsfield:text-->
<HTML><HEAD>
<TITLE>C API Reference  -- Ns_InitializeRWLock</TITLE>
<LINK rel=Previous href="c-ch237.htm">
<LINK rel=ToC href="toc.htm">
<LINK rel=Index href="master.htm">
<LINK rel=Next href="c-ch239.htm">
</HEAD><BODY BGCOLOR="#ffffff"><A NAME="topofpage"></A>
<TABLE WIDTH=100%>
  <TR>
    <TD ALIGN=LEFT>
      <A NAME="topofpage"></A> <IMG  SRC="as-c-sm.gif">
    </TD>
    <TD ALIGN=RIGHT>
      <A href="c-ch237.htm"><IMG  BORDER="0" src=navbprev.gif alt="[ Previous ]"></A>
      <A href=toc.htm> <IMG  BORDER="0" src=navbhome.gif alt="[ Contents ]"></A>
      <A href=master.htm> <IMG  BORDER="0" src=navbhelp.gif alt="[ Index ]"></A>
      <A href="c-ch239.htm"> <IMG  BORDER="0" src=navbnext.gif alt="[ Next ]"></A>
      <A name="7983"> </A>
    </TD>
  </TR>
</TABLE>

<a name="424435">
</a><h3>Ns_InitializeRWLock</h3>
<a name="424436">
</a><h4>Overview</h4>
Initialize a read/write lock
<a name="424437">
</a><a name="424438">
</a><h4>Syntax</h4>
<pre>    <a name="424439"></a>int Ns_InitializeRWLock(
    <a name="424440"></a>Ns_RWLock *lock
    <a name="424441"></a>);
</pre><p><a name="424442">
</a><h4>Description</h4>
<p><a name="424443">
</a>Initialize a read/write lock for use. A lock ID is returned via the <code>lock</code> parameter, which can be used in the other read/write lock functions.</p>
<a name="424613">
</a><h4>About Read/Write Locks</h4>
<p><a name="424614">
</a>Read/write locks are a serialization mechanism for using data structures where multiple reads can happen simultaneously, but where writes must happen singly. For example, suppose you have a hash table that is heavily used but doesn't change very often. You'd like to have multiple threads be able to read from the table without blocking on each other, but when you need to update the table, you can do so safely without having to worry about other threads reading incorrect data.</p>
<p><a name="424615">
</a>The principal feature of read/write locks is the mechanism of which locks have priority and which locks must wait. Any number of read locks can be pending. If there's a write lock active, the read lock acquisition blocks until the write lock is released. Also, only one write lock can be in effect. If there are pending read locks active, the write lock acquisition blocks until all of the read locks drain. If a subsequent read lock acquisition attempt is made while a write lock is waiting to acquire, the write lock has priority.</p>
<p><a name="767610">
</a>Ns_RWLockInit is the preferred function for initializing a read/write lock.</p>
<a name="424618">
</a><h4>Examples</h4>
<pre>    <a name="424623"></a>NS_RWLock lock;
    <a name="424624"></a>int GetData (int key)
    <a name="424625"></a>{
    <a name="424626"></a>    /* acquire a read lock */
    <a name="424627"></a>    Ns_ReadLockRWLock (&amp;lock);
    <a name="424628"></a>    search through the data structure looking for key's data;
    <a name="424629"></a>    
    <a name="424630"></a>    /* release our read lock */
    <a name="424631"></a>    Ns_ReadUnlockRWLock (&amp;lock);
    <a name="424632"></a>    return (value);
    <a name="424633"></a>   
    <a name="424634"></a>} /* GetData */
    <a name="424635"></a>int StoreData (int key, int value)
    <a name="424636"></a>{
    <a name="424637"></a>   /* acquire the write lock */
    <a name="424638"></a>   Ns_WriteLockRWLock (&amp;lock);
    <a name="424639"></a>   manipulate the data structure storing key's value;
    <a name="424640"></a>   /* release the write lock */
    <a name="424641"></a>   Ns_WriteUnlockRWLock (&amp;lock);
    <a name="424642"></a>   return (value);
    <a name="424643"></a>} /* StoreData */
    <a name="424644"></a>...
    <a name="424645"></a>Ns_InitializeRWLock (&amp;lock);
    <a name="424646"></a>...
    <a name="424647"></a>(different threads using GetData and StoreData)
    <a name="424648"></a>...
    <a name="424829"></a>Ns_DestoryRWLock (&amp;lock);
</pre><p><a name="424830">
</a><h4>See Also</h4>
<p><a name="424837">
</a>Ns_DestroyRWLock</p>
<p><a name="424839">
</a>Ns_ReadLockRWLock</p>
<p><a name="424840">
</a>Ns_ReadUnlockRWLock</p>
<p><a name="424841">
</a>Ns_WriteLockRWLock</p>
<p><a name="424842">
</a>Ns_WriteUnlockRWLock</p>


<TABLE BORDER="2" CELLPADDING="1" width="100%">
<TR><TD COLSPAN=3><P ALIGN=Center>
<IMG SRC="bluebult.gif">
<A HREF="#topofpage">
<FONT SIZE=-1>Top of Page</FONT></A>
<IMG SRC="bluebult.gif">
</TD></TR>
<TR><TD COLSPAN=3><P ALIGN=Center>
<A href="c-ch237.htm">
<IMG  BORDER="0" src=navbprev.gif alt="[ Previous ]"></A>
<A href=toc.htm>
<IMG  BORDER="0" src=navbhome.gif alt="[ Contents ]"></A>
<A href=master.htm>
<IMG  BORDER="0" src=navbhelp.gif alt="[ Index ]"></A>
<A href="c-ch239.htm">
<IMG  BORDER="0" src=navbnext.gif alt="[ Next ]"></A>
<BR align=center>
<FONT size=-1>Copyright &copy; 1998-99 America Online,
Inc.</FONT>
</TD></TR></TABLE></BODY></HTML><!--plsfield:end-->