<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:15 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>Ns_Alloc</title>

</head>
<body>

<h1 align="center">Ns_Alloc</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">ns_calloc,
ns_free, ns_malloc, ns_realloc &minus; Memory allocation
functions</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em"><b>#include
&quot;ns.h&quot;</b></p>

<p style="margin-left:11%; margin-top: 1em">void * <b><br>
ns_calloc</b>(<i>size_t num, size_t esize</i>)</p>

<p style="margin-left:11%; margin-top: 1em">void <b><br>
ns_free</b>(<i>void *ptr</i>)</p>

<p style="margin-left:11%; margin-top: 1em">void * <b><br>
ns_malloc</b>(<i>size_t size</i>)</p>

<p style="margin-left:11%; margin-top: 1em">void * <b><br>
ns_realloc</b>(<i>void *ptr, size_t size</i>)
_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">The AOLserver
memory storage allocation code was moved into Tcl core
beginning with Tcl 8.4.0. Starting with AOLserver 3.5, these
memory allocation functions are wrappers that call Tcl_Alloc
and Tcl_Free. Earlier versions of AOLserver used this fast
memory storage allocator internally, or the platform&rsquo;s
memory allocator depending on how you configured it.</p>

<p style="margin-left:11%; margin-top: 1em">The actual
amount of memory allocated or freed will be different from
the requested amount. This is because the fast memory
allocation code pools memory into chunks and manages that
memory internally. In addition, the Tcl distribution may be
compiled to allocate even more memory which is used
internally for diagnostic reasons. Using ns_free to free
memory created by routines other than ns_malloc, ns_realloc
and ns_calloc will almost certainly result in segmentation
faults or undefined behavior.</p>

<p style="margin-left:11%; margin-top: 1em">The lowercase
and mixed-case versions are identical; the lowercase
versions are preferred. <b><br>
ns_calloc</b>(<i>num, esize</i>)</p>

<p style="margin-left:22%;">Allocates a block of memory
that is <i>num</i> * <i>esize</i> large, zeros it, and
returns a pointer to the beginning of the memory block or
NULL if the operation fails.</p>

<p style="margin-left:11%;"><b>ns_free</b>(<i>ptr</i>)</p>

<p style="margin-left:22%;">ns_free() frees the memory
space pointed to by ptr. This pointer must have been created
with a previous call to ns_malloc(), ns_calloc() or
ns_realloc(). If ptr is NULL, no operation is performed.
ns_free() returns no value.</p>


<p style="margin-left:11%;"><b>ns_malloc</b>(<i>size</i>)</p>

<p style="margin-left:22%;">ns_malloc() allocates size
bytes and returns a pointer to the allocated memory. The
memory is not cleared. The value returned is a pointer to
the allocated memory or NULL if the request fails. The
memory must be freed by ns_free.</p>

<p style="margin-left:11%;"><b>ns_realloc</b>(<i>ptr,
size</i>)</p>

<p style="margin-left:22%;"><b>ns_realloc</b> changes the
size of the memory block pointed to by <i>ptr</i> to
<i>size</i> bytes. The contents will be unchanged to the
minimum of the old and new sizes. Newly allocated memory
will be uninitialized. If <i>ptr</i> is NULL, the call is
equivalent to <b>ns_malloc</b>(<i>size</i>); if <i>size</i>
is equal to zero, the call is equivalent to
<b>ns_free</b>(<i>ptr</i>). Unless <i>ptr</i> is NULL, it
must have been returned by an earlier call to
<b>ns_malloc</b>(), <b>ns_calloc</b>() or
<b>ns_realloc</b>().</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">Tcl_Alloc(3),
Tcl_Free(3)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">memory,
allocation</p>
<hr>
</body>
</html>
