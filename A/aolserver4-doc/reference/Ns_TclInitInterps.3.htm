<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:32 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>Ns_TclInit</title>

</head>
<body>

<h1 align="center">Ns_TclInit</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#ARGUMENTS">ARGUMENTS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em">Ns_TclInitInterps,
Ns_TclInitModule, Ns_TclInterpServer, Ns_TclLibrary &minus;
library procedures</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em"><b>#include
&quot;ns.h&quot;</b></p>

<p style="margin-left:11%; margin-top: 1em">int <b><br>
Ns_TclInitInterps</b>(<i>server, initProc, arg</i>)</p>


<p style="margin-left:11%; margin-top: 1em"><b>Ns_TclInitModule</b>(<i>arg,
arg</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_TclInterpServer</b>(<i>interp</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_TclLibrary</b>(<i>void</i>)</p>

<h2>ARGUMENTS
<a name="ARGUMENTS"></a>
</h2>


<table width="100%" border="0" rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="11%"></td>
<td width="58%">


<p style="margin-top: 1em">char <i>*server</i> (in)</p></td>
<td width="9%"></td>
<td width="22%">


<p style="margin-top: 1em">Name of virtual server.</p></td></tr>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="58%">


<p>Ns_TclInterpInitProc <i>*initProc</i> (in)</p></td>
<td width="9%"></td>
<td width="22%">


<p>Procedure to call to initialize interps.</p></td></tr>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="58%">


<p>void <i>*arg</i> (in)</p></td>
<td width="9%"></td>
<td width="22%">


<p>Callback data to pass to <i>initProc</i>.</p></td></tr>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="58%">


<p>Tcl_Interp <i>*interp</i> (in)</p></td>
<td width="9%"></td>
<td width="22%">


<p>Tcl interp to get server.</p></td></tr>
</table>


<p style="margin-left:78%;">_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em"><b>Ns_TclInitInterps</b>
arranges for <i>initProc</i> to be called on the startup
initialization interp. <i>initProc</i> should have arguments
and result that match the type
<i>Ns_TclInterpInitProc</i>:</p>

<p style="margin-left:22%;">typedef int
Ns_TclInterpInitProc(Tcl_Interp <i>*interp</i>, void
<i>*arg</i>);</p>

<p style="margin-left:11%;">The <i>arg</i> parameter to
<i>initProc</i> is a copy of the <i>arg</i> argument given
to <b>Ns_TclInitInterps</b>. A typical <i>initProc</i> will
create new commands in the given interp with
Tcl_CreateCommand. The following AOLserver module example
results in the <i>msg</i> command being in all interps. The
command simply sets the &quot;hello&quot; static string as
the interp result:</p>

<p style="margin-left:22%;">static Ns_TclInterpInitProc
AddCmds; <br>
static Tcl_CmdProc MsgCmd; <br>
int <br>
Ns_ModuleInit(char *server, char *module) <br>
{ <br>
static char *arg = &quot;hello&quot;; <br>
return Ns_TclInitInterps(server, AddCmds, arg); <br>
} <br>
static int <br>
AddCmds(Tcl_Interp *interp, void *arg) <br>
{ <br>
Tcl_CreateCommand(interp, &quot;msg&quot;, MsgCmd, arg,
NULL); <br>
return TCL_OK; <br>
} <br>
static int <br>
MsgCmd(ClientData arg, Tcl_Interp *interp, int argc, char
**argv) <br>
{ <br>
Tcl_SetResult(interp, (char *) arg, TCL_STATIC); <br>
return TCL_OK; <br>
}</p>

<p style="margin-left:11%;">In AOLserver 3.x, the effect of
<b>Ns_TclInitInterps</b> is to invoke <i>initProc</i>
immediately on the single initializaton interp of the server
and the result of <b>Ns_TclInitInterps</b> is the return
code of <i>initProc</i>. The state of this interp (command,
procedures) will then be copied to other interps when
created via the <b>Ns_TclAllocInterp</b> routine. This
differs from the original AOLserver 2.0 where
<i>initProc</i> was called on each interp in an interp pool,
the 2.1-2.3 behavior where <i>initProc</i> was called once
on an interp linked to the per-server shared command tables,
and the upcoming 4.0 behavior where <i>initProc</i> is
called at interp create time. In fact, the 4.0 behavior is
that of the <b>Ns_TclRegisterAtCreate</b> routine. In
practice, if your <i>initProc</i> <b>does nothing but create
commands with NULL or shared client data the effect is the
same in all releases.</b></p>


<p style="margin-left:11%; margin-top: 1em"><b>Ns_TclInterpServer</b>
returns the virtual server in which the given interp was
created.</p>


<p style="margin-left:11%; margin-top: 1em"><b>Ns_TclLibrary</b>
returns the shared Tcl library of the server installation
(e.g., /usr/local/aolserver/modules/tcl).</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em">Ns_TclRegisterAtCreate(3),
Ns_TclAllocInterp(3)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>
<hr>
</body>
</html>
