<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:31 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>Ns_String</title>

</head>
<body>

<h1 align="center">Ns_String</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">Ns_Match,
Ns_NextWord, Ns_StrCaseFind, Ns_StrCopy, Ns_StrDup,
Ns_StrNStr, Ns_StrToLower, Ns_StrToUpper, Ns_StrTrim,
Ns_StrTrimLeft, Ns_StrTrimRight, Ns_StringPrint, ns_strcopy,
ns_strdup &minus; library procedures</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em"><b>#include
&quot;ns.h&quot;</b></p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_Match</b>(<i>char *a, char *b</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_NextWord</b>(<i>char *line</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrCaseFind</b>(<i>char *s1, char *s2</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrCopy</b>(<i>char *str</i>) <b><br>
ns_strcopy</b>(<i>char *str</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrDup</b>(<i>char *str</i>) <b><br>
ns_strdup</b>(<i>char *str</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrNStr</b>(<i>char *pattern, char *expression</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrToLower</b>(<i>char *string</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrToUpper</b>(<i>char *string</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrTrim</b>(<i>char *string</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrTrimLeft</b>(<i>char *string</i>)</p>

<p style="margin-left:11%; margin-top: 1em">char * <b><br>
Ns_StrTrimRight</b>(<i>char *string</i>)</p>

<p style="margin-left:11%; margin-top: 1em">void <b><br>
Ns_StringPrint</b>(<i>char *string</i>)
_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em"><b>Ns_Match</b>(<i>a,
b</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Compare the
beginnings of two strings, case insensitively. The
comparison stops when the end of the shorter string is
reached. Return NULL if no match, b if match.</p>


<p style="margin-left:11%;"><b>Ns_NextWord</b>(<i>line</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Return a
pointer to first character of the next word in a string;
words are separated by white space. The returned pointer
points into the original string. For example,
Ns_NextWord(&quot;abc def&quot;) returns a pointer to the
&rsquo;d&rsquo; in that string.</p>

<p style="margin-left:11%;"><b>Ns_StrCaseFind</b>(<i>s1,
s2</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Locate the
first occurrence of substring s2 within string s1 in a
case-insensitive manner. The terminating &rsquo; &rsquo;
characters are not compared. Returns a pointer that points
into s1. Uses strstr(3) to do its work.</p>


<p style="margin-left:11%;"><b>Ns_StrCopy</b>(<i>str</i>)</p>


<p style="margin-left:22%;"><b>ns_strcopy</b>(<i>str</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Copy a string
or NULL value using Ns_Malloc. The Ns_StrCopy function is
identical to the Ns_StrDup function but allows for the
string parameter to be NULL, in which case Ns_StrCopy does
nothing and returns NULL.</p>


<p style="margin-left:11%;"><b>Ns_StrDup</b>(<i>str</i>)</p>


<p style="margin-left:22%;"><b>ns_strdup</b>(<i>str</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Copy a string
using Ns_Malloc. The Ns_StrDup function calls Ns_Malloc to
allocate enough memory to make a copy of the given
string.</p>

<p style="margin-left:11%;"><b>Ns_StrNStr</b>(<i>pattern,
expression</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Search through
pattern for expression, case insensitively. Return a pointer
that points to where the match begins within pattern, or
NULL if expression is not contained in pattern.</p>


<p style="margin-left:11%;"><b>Ns_StrToLower</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Convert string
to lowercase. Returns pointer to original string. Original
string will be modified.</p>


<p style="margin-left:11%;"><b>Ns_StrToUpper</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Convert string
to uppercase. Returns pointer to original string. Original
string will be modified.</p>


<p style="margin-left:11%;"><b>Ns_StrTrim</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Trim leading
and trailing white space from string. A pointer to the
trimmed string will be returned, which will be in the
original string. Do not lose your original pointer to the
string if you later need to free it.</p>


<p style="margin-left:11%;"><b>Ns_StrTrimLeft</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Trim leading
white space from string. A pointer to the trimmed string
will be returned, which will be in the original string. Do
not lose your original pointer to the string if you later
need to free it.</p>


<p style="margin-left:11%;"><b>Ns_StrTrimRight</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Trim trailing
white space from string. The original string pointer will be
returned, but the string will have been modified: a &rsquo;
&rsquo;s will have been placed right after the last
non-whitespace character of the string.</p>


<p style="margin-left:11%;"><b>Ns_StringPrint</b>(<i>string</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Print a string
to stdout.</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">nsd(1),
info(n)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>
<hr>
</body>
</html>
