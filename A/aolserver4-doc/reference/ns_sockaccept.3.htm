<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:47 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>ns_sock</title>

</head>
<body>

<h1 align="center">ns_sock</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">ns_sockaccept,
ns_sockblocking, ns_sockcallback, ns_sockcheck,
ns_socketpair, ns_socklisten, ns_socklistencallback,
ns_socknonblocking, ns_socknread, ns_sockopen, ns_sockselect
&minus; Network socket commands</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em"><b>ns_sockaccept</b>
<i>sockid</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_sockblocking</b>
<i>sockid</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_sockcallback</b>
<i>sockid script when</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_sockcheck</b>
<i>fileid</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_socketpair</b></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_socklisten</b>
<i>address port</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_socklistencallback</b>
<i>address port script</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_socknonblocking</b>
<i>sockid</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_socknread</b>
<i>sockid</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_sockopen</b>
?<i>-nonblock</i> | <i>-timeout seconds</i>? <i>host
port</i></p>


<p style="margin-left:11%; margin-top: 1em"><b>ns_sockselect</b>
?<i>-timeout seconds</i>? <i>rfds wfds efds</i>
_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">Performs one of
several network socket operations, providing a means to
manipulate and use sockets directly within AOLserver.
<b><br>
ns_sockaccept</b> <i>sockid</i></p>

<p style="margin-left:22%; margin-top: 1em">Accepts a new
connection on the socket specified by <i>sockid</i> and
returns a list containing the read and write file
descriptors for the socket, respectively.</p>

<p style="margin-left:22%; margin-top: 1em">The file
descriptors can be used with Tcl&rsquo;s <b>puts</b>,
<b>gets</b>, <b>read</b> or any other Tcl socket
manipulation commands.</p>


<p style="margin-left:22%; margin-top: 1em"><b>ns_sockaccept</b>
does not create a socket for you. It is normally used in
conjunction with <b>ns_sockcallback</b>,
<b>ns_socklisten</b>, and <b>ns_socklistencallback</b>.</p>

<p style="margin-left:22%; margin-top: 1em">You can use
<b>ns_sockcheck</b> to see if the socket is valid before
using <b>ns_sockaccept</b> on it.</p>

<p style="margin-left:11%;"><b>ns_sockblocking</b>
<i>sockid</i></p>

<p style="margin-left:22%; margin-top: 1em">Sets the socket
specified by <i>sockid</i> to blocking mode. In blocking
mode, an operation on a socket must complete before the
command can return. This can cause your process or thread to
block forever if the operation does not complete. If that
happens in an ADP, the page may never complete until the
socket is interrupted, closed or a TCP timeout occurs.</p>

<p style="margin-left:11%;"><b>ns_sockcallback</b>
<i>sockid script when</i></p>

<p style="margin-left:22%; margin-top: 1em">Registers a
socket callback script that will be run when a connection is
made to the socket specified by <i>sockid</i>.</p>

<p style="margin-left:22%; margin-top: 1em">The socket must
already exist. You can create a socket using
<b>ns_socklisten</b>.</p>

<p style="margin-left:22%; margin-top: 1em">The
<i>script</i> should accept <i>sockid</i> and <i>when</i> as
its first two arguments.</p>

<p style="margin-left:22%; margin-top: 1em">The
<i>script</i> is responsible for doing an
<b>ns_sockaccept</b> on <i>sockid</i> prior to reading from
and writing to the socket.</p>

<p style="margin-left:22%; margin-top: 1em">If the same
<i>script</i> will handle all <i>when</i> values, you must
still register the script four separate times, once for each
type of <i>when</i> value.</p>

<p style="margin-left:22%; margin-top: 1em">The <i>when</i>
value is passed to <i>script</i> when <i>script</i> is
invoked. The <i>when</i> value is one of:</p>

<table width="100%" border="0" rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="26%"></td>
<td width="40%">


<p><i>r</i> - the socket is readable</p></td>
<td width="34%">
</td></tr>
</table>

<p style="margin-left:26%; margin-top: 1em"><i>w</i> - the
socket is writeable</p>

<p style="margin-left:26%; margin-top: 1em"><i>e</i> - the
socket has an exceptional condition</p>

<p style="margin-left:26%; margin-top: 1em"><i>x</i> - the
server is shutting down</p>

<p style="margin-left:11%;"><b>ns_sockcheck</b>
<i>fileid</i></p>

<p style="margin-left:26%; margin-top: 1em">Uses recv() or
send() calls to check if a socket is still connected. The
<i>fileid</i> is the read or write file id returned by
<b>ns_sockopen</b>.</p>

<p style="margin-left:26%; margin-top: 1em">This function
is useful if you used the <i>-nonblock</i> option with
<b>ns_sockopen</b> after calling <b>ns_sockselect</b>.</p>

<p style="margin-left:11%;"><b>ns_socketpair</b></p>

<p style="margin-left:26%;">Creates a pair of connected
sockets and returns a list of file ids: the first one for
reads and the second one for writes.</p>

<p style="margin-left:11%;"><b>ns_socklisten</b> <i>address
port</i></p>

<p style="margin-left:26%;">Creates a new socket and
listens for connections at the specified <i>address</i> and
<i>port</i>. An asterisk (*) can be used as the
<i>address</i> argument to specify all addresses.</p>

<p style="margin-left:26%; margin-top: 1em">The socket id
is returned.</p>

<p style="margin-left:26%; margin-top: 1em">You must use
<b>ns_sockaccept</b> to accept connections on the
socket.</p>

<p style="margin-left:11%;"><b>ns_socklistencallback</b>
<i>address port script</i></p>

<p style="margin-left:26%; margin-top: 1em">Creates a new
socket and listens for connections at the specified
<i>address</i> and <i>port</i>. An asterisk (*) can be used
as the <i>address</i> argument to specify all addresses.</p>

<p style="margin-left:26%; margin-top: 1em">Runs
<i>script</i> when a new connection is received. The
<i>script</i> must use <b>ns_sockaccept</b> on the</p>

<p style="margin-left:11%;"><b>ns_socknonblocking</b>
<i>sockid</i></p>

<p style="margin-left:26%; margin-top: 1em">Sets the socket
specified by <i>sockid</i> to nonblocking.</p>

<p style="margin-left:11%;"><b>ns_socknread</b>
<i>sockid</i></p>

<p style="margin-left:26%; margin-top: 1em">Returns the
number of bytes waiting to be read from the socket specified
by <i>sockid</i>.</p>

<p style="margin-left:11%;"><b>ns_sockopen</b>
?<i>-nonblock</i> | <i>-timeout seconds</i>? <i>host
port</i></p>

<p style="margin-left:26%; margin-top: 1em">Uses the
socket(), bind() and connect() calls to connect to the
remote <i>host</i> on the specified <i>port</i>.
<b>ns_sockopen</b> returns a list containing the read and
write fileids, respectively.</p>

<p style="margin-left:26%; margin-top: 1em">The
<i>-nonblock</i> option causes <b>ns_sockopen</b> to return
immediately, while the connect is still in progress by the
operating system. Use <b>ns_sockcheck</b> with the write
fileid to see if the connect has completed before attempting
to read from or write to the socket.</p>

<p style="margin-left:26%; margin-top: 1em">The
<i>-timeout</i> option specifies how long to wait for the
connect to be made in <i>seconds</i> before timing out.</p>

<p style="margin-left:11%;"><b>ns_sockselect</b>
?<i>-timeout seconds</i>? <i>rfds wfds efds</i></p>

<p style="margin-left:26%; margin-top: 1em">Uses a call to
select() to determine which fileids are readable, writable
or have exceptional conditions. <b>ns_sockselect</b> returns
a list of three lists: readable fileids, writable fileids,
and the fileids with exceptions.</p>

<p style="margin-left:26%; margin-top: 1em">The
<i>-timeout</i> option specifies how many <i>seconds</i> to
wait for <b>ns_sockselect</b> before timing out.</p>

<p style="margin-left:26%; margin-top: 1em">The
<i>rfds</i>, <i>wfds</i> and <i>efds</i> arguments are lists
of readable fileids, writeable fileids, and fileids with
exceptions, respectively.</p>

<p style="margin-left:11%; margin-top: 1em">Be careful
using these socket commands in an ADP or a procedure called
by an ADP. If a socket command hangs, the page may not
finish being served to the user until the TCP connection
times out, typically several minutes later.</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">nsd(1),
info(n)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>
<hr>
</body>
</html>
