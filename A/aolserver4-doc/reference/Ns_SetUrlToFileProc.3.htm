<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:35 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>Ns_UrlToFile</title>

</head>
<body>

<h1 align="center">Ns_UrlToFile</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>



<p style="margin-left:11%; margin-top: 1em">Ns_SetUrlToFileProc,
Ns_UrlIsDir, Ns_UrlIsFile, Ns_UrlToFile &minus; URL to file
mapping procedures</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em"><b>#include
&quot;ns.h&quot;</b></p>

<p style="margin-left:11%; margin-top: 1em">void <b><br>
Ns_SetUrlToFileProc</b>(<i>char *server, Ns_UrlToFileProc
*procPtr</i>)</p>

<p style="margin-left:11%; margin-top: 1em">int <b><br>
Ns_UrlIsDir</b>(<i>char *server, char *url</i>)</p>

<p style="margin-left:11%; margin-top: 1em">int <b><br>
Ns_UrlIsFile</b>(<i>char *server, char *url</i>)</p>

<p style="margin-left:11%; margin-top: 1em">int <b><br>
Ns_UrlToFile</b>(<i>Ns_DString *dsPtr, char *server, char
*url</i>)
_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">These functions
map URL paths to real files and directories. They are
normally used to determine whether a given URL has a
corresponding file or directory and to return the real
filesystem path that corresponds to the URL. <b><br>
Ns_SetUrlToFileProc</b>(<i>server, procPtr</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Set a pointer
to a custom routine to use in place of
<b>Ns_UrlToFile</b>.</p>

<p style="margin-left:11%;"><b>Ns_UrlIsDir</b>(<i>server,
url</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Construct a
directory name by appending the URL to the current AOLserver
pages directory for the specified server. Return NS_TRUE if
the directory exists; NS_FALSE otherwise.</p>

<p style="margin-left:11%;"><b>Ns_UrlIsFile</b>(<i>server,
url</i>)</p>

<p style="margin-left:22%; margin-top: 1em">Construct a
file name by appending the URL to the current AOLserver
pages directory for the specified server. Return NS_TRUE if
the file exists and is a regular file; NS_FALSE
otherwise.</p>

<p style="margin-left:22%; margin-top: 1em">Example:</p>

<p style="margin-left:22%; margin-top: 1em">/* IsFile -
Simple request to determine if an URL is a file. */ <br>
int <br>
IsFile(Ns_Conn *conn, void *ctx) <br>
{ <br>
int isfile; <br>
char *server;</p>

<p style="margin-left:22%; margin-top: 1em">server =
Ns_ConnServer(conn); <br>
isfile = Ns_UrlIsFile(server, conn-&gt;request-&gt;url);
<br>
if (isfile) { <br>
Ns_ConnReturnNotice(conn, 200, &quot;File&quot;, NULL); <br>
} else { <br>
Ns_ConnReturnNotice(conn, 200, &quot;Not a File&quot;,
NULL); <br>
} <br>
return NS_OK; <br>
}</p>

<p style="margin-left:11%;"><b>Ns_UrlToFile</b>(<i>dsPtr,
server, url</i>)</p>

<p style="margin-left:22%; margin-top: 1em">The
Ns_UrlToFile function writes the full path name of the file
corresponding to the given URL. The result is appended to
the Ns_DString. The function does not check that the file
exists or is readable by the AOLserver process. This
function returns a status of NS_OK or NS_ERROR.</p>

<p style="margin-left:22%; margin-top: 1em">Normally this
prepends the pageroot to the URL path. If you have created
your own custom routine and used <b>Ns_SetUrlToFileProc</b>
to point to it, your routine is called instead. This could
be used to create, for example, a module that takes the
given URL and maps it to a file in a different way than the
default <b>Ns_UrlToFile</b> routine.</p>

<p style="margin-left:22%; margin-top: 1em">Example:</p>

<p style="margin-left:22%; margin-top: 1em">/* A simple
page fetch request function. */ <br>
int <br>
SimpleFetch(Ns_Conn *conn, void *ctx) <br>
{ <br>
Ns_DString ds; <br>
FILE fp; <br>
char *server; <br>
Ns_DStringInit(&amp;ds);</p>

<p style="margin-left:22%; margin-top: 1em">server =
Ns_ConnServer(conn); <br>
Ns_UrlToFile(&amp;ds, server, conn-&gt;request-&gt;url);
<br>
fp = fopen(ds.string, &quot;r&quot;); <br>
Ns_ConnSendOpenFp(conn, fp, -1); <br>
fclose(fp); <br>
Ns_DStringFree(&amp;ds); <br>
return NS_OK; <br>
}</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">nsd(1),
info(n)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>
<hr>
</body>
</html>
