<!-- Creator     : groff version 1.21 -->
<!-- CreationDate: Sat May  5 10:27:36 2012 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p       { margin-top: 0; margin-bottom: 0; vertical-align: top }
       pre     { margin-top: 0; margin-bottom: 0; vertical-align: top }
       table   { margin-top: 0; margin-bottom: 0; vertical-align: top }
       h1      { text-align: center }
</style>
<title>ns_adp_include</title>

</head>
<body>

<h1 align="center">ns_adp_include</h1>

<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>
<a href="#EXAMPLE">EXAMPLE</a><br>
<a href="#SEE ALSO">SEE ALSO</a><br>
<a href="#KEYWORDS">KEYWORDS</a><br>

<hr>



<p style="margin-top: 1em">______________________________________________________________________________</p>

<h2>NAME
<a name="NAME"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">ns_adp_argc,
ns_adp_argv, ns_adp_bind_args, ns_adp_dir, ns_adp_eval,
ns_adp_ident, ns_adp_include, ns_adp_parse, ns_adp_safeeval
&minus; ADP execution commands</p>

<h2>SYNOPSIS
<a name="SYNOPSIS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em"><b>ns_adp_argc
<br>
ns_adp_argv</b> ?<i>index</i>? <b><br>
ns_adp_bind_args</b> <i>var1</i> ?<i>var2...</i>? <b><br>
ns_adp_dir <br>
ns_adp_eval</b> <i>page</i> ?<i>arg ...</i>? <b><br>
ns_adp_ident</b> ?<i>string</i>? <b><br>
ns_adp_include</b> ?<i>-cache seconds</i>? ?<i>-nocache</i>?
<i>file</i> ?<i>arg ...</i>? <b><br>
ns_adp_parse ?</b><i>-file file</i>? ?<i>-string string</i>?
?<i>-savedresult varName</i>? ?<i>-cwd path</i>? ?<i>args
...</i> ? <b><br>
ns_adp_safeeval</b> <i>page</i> ?<i>arg ...</i>?
_________________________________________________________________</p>

<h2>DESCRIPTION
<a name="DESCRIPTION"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">These commands
enable execution of ADP files or strings. Each call to
<b>ns_adp_include</b> results in a new ADP &quot;call
frame&quot; similar to a Tcl procedure with local variable
scope. Variables may be passed to these call frames as
optional arguements and then accessed via the
<b>ns_adp_argc</b>, <b>ns_adp_argv</b>, and
<b>ns_adp_bind_args</b> commands. The <b>ns_adp_eval</b>,
<b>ns_adp_safeeval</b>, or ns_adp_parse can also accept
arguments via the same mechanism but execute in the same ADP
call frame as their parent, i.e., with the same local
variables. See the <b>ns_adp</b> page for details on ADP
syntax and control flow. <b><br>
ns_adp_argc</b></p>

<p style="margin-left:22%;">This command returns the number
of optional arguments passed to the ADP. The count includes
the argument for the ADP file or string.</p>

<p style="margin-left:11%;"><b>ns_adp_argv</b> ?<i>index
?default?</i>?</p>

<p style="margin-left:22%;">This command returns the list
of arguments passed to the ADP. If the optional <i>index</i>
argument is specified, only the given argument is returned
instead of the full list. If the optional <i>default</i>
argument is specified along with an <i>index</i> argument,
it serves as the value to return if the cooresponding index
was not passed to the call frame.</p>

<p style="margin-left:11%;"><b>ns_adp_bind_args</b>
<i>var1</i> ?<i>var2...</i>?</p>

<p style="margin-left:22%;">This command can be used to set
multiple optional ADP arguments to a list of local
variables. Argument binding begins with argument number 1,
i.e., the first argument beyond the ADP file or script.</p>

<p style="margin-left:11%;"><b>ns_adp_dir</b></p>

<p style="margin-left:22%;">This command returns the
directory in which the ADP currently being processed resides
and which relative ADP files will be found.</p>

<p style="margin-left:11%;"><b>ns_adp_eval</b> <i>page</i>
?<i>arg ...</i>?</p>

<p style="margin-left:22%;">This command evaluates the ADP
specified by <i>page</i> and returns the output as the
result. If any arguments are specified, they will be passed
to the ADP.</p>

<p style="margin-left:11%;"><b>ns_adp_ident</b>
?<i>string</i>?</p>

<p style="margin-left:22%;">This command returns and/or
sets an arbitrary version management string for the given
ADP file. It could be used to specify a header replaced via
a CVS/RCS checkin: <br>
&lt;% ns_adp_ident {$Header:
/cvsroot/aolserver/aolserver/doc/ns_adp_include.n,v 1.1
2006/04/13 19:07:12 jgdavidson Exp $} %&gt;</p>

<p style="margin-left:11%;"><b>ns_adp_include</b>
?<i>-cache seconds</i>? ?<i>-nocache</i>? <i>file</i>
?<i>arg ...</i>?</p>

<p style="margin-left:22%;">This command parses the
specified file as an ADP, including the text blocks and any
output generated by script blocks in the current output
buffer. The execution occurs in a new call frame with
private local variables similar to a Tcl procedure. The
<i>filename</i> is the file containing the ADP to be parsed.
If the file is not an absolute filename, the file is
considered relative to the current ADP working directory
which is the directory of the previously included file.
Optional arguments (<i>arg...</i>) can be passed to the
included ADP; see the <b>ns_adp_argv</b> command above for
details on accessing the values of these variables. The
optional <i>-cache seconds</i> argument specifies the time
to cache the results of execution. All output generated by
any scripts and included ADP&rsquo;s are saved for
subsequent requests unless an included ADP has a
<i>-nocache</i> option. The use of <i>-cache</i> and
<i>-nocache</i> can be used to increase performance of ADP
used to generated a mix of personalized, non-cacheable,
content and shared content which changes more slowly. Under
high load, the performance improvement can be substaintial,
especially in cases where the cached content is the result
of accessing a slow databases or web services. See the
<b>EXAMPLES</b> section for an example of using cached
output.</p>

<p style="margin-left:11%;"><b>ns_adp_parse ?</b><i>-file
file</i>? ?<i>-string string</i>? ?<i>-savedresult
varName</i>? ?<i>-cwd <br>
path</i>? ?<i>args ...</i> ?</p>

<p style="margin-left:22%;">This function processes the
specified ADP file or string and returns the result as a
string. Processing a second ADP from inside an ADP is
normally best done with <b>ns_adp_include</b> as that
command resolves relative pathnames passed to it. Also note
that <b>ns_adp_parse</b> will ignore any directives to turn
on streaming. Tcl_Eval is used to evaluate the Tcl commands
in the ADP.</p>

<p style="margin-left:22%; margin-top: 1em">The <i>-string
adp</i> option can be used to parse a string of ADP text.
Although the <i>&lt;% ... %&gt;</i> syntax is allowed in the
string, if you have this embedded in an ADP, you have to be
careful in constructing the string that you do not
prematurely terminate an enclosing script.</p>

<p style="margin-left:22%; margin-top: 1em">The <i>-file
file</i> option can be used to parse ADP contained in the
given file. This use is similar to that of
<b>ns_adp_include</b> except the result is returned by the
command instead of automatically being appended to the
output stream.</p>

<p style="margin-left:22%; margin-top: 1em">The
<i>-global</i> and <i>-local</i> options are deprecated. All
calls are now local to the current ADP call frame such that
the <i>-local</i> option is ignored and the <i>-global</i>
option generates an error.</p>

<p style="margin-left:22%; margin-top: 1em">Additional
arguments are passed to the ADP execution and can be
accessed via the <b>ns_adp_argc</b>, <b>ns_adp_argv</b>, and
<b>ns_adp_bind_args</b> commands.</p>

<p style="margin-left:11%;"><b>ns_adp_safeeval</b>
<i>string</i> ?<i>arg ...</i>?</p>

<p style="margin-left:22%;">The command evaluates the given
ADP string in a safe environment which ignores all cases of
<i>&lt;% ... %&gt;</i> and <i>&lt;%= ... %&gt;</i> commands,
only allowing execution of per-defined registered tags. This
usage can be helpful to expose a limited set of dynamic
functionality to publishing staff without exposing the full
command set.</p>

<h2>EXAMPLE
<a name="EXAMPLE"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">The following
example demonstrates passing an argument to an included ADP
file:</p>

<p style="margin-left:22%; margin-top: 1em">&lt;%
ns_adp_include included.adp arg1 arg2 arg3 %&gt;</p>

<p style="margin-left:11%; margin-top: 1em">The variables
could be accessed within <i>included.adp</i> with:</p>

<p style="margin-left:22%; margin-top: 1em">ns_adp_argc
<i><br>
--&gt; return 4</i> <br>
ns_adp_argv 1 <i><br>
--&gt; returns &quot;arg1&quot;</i> <br>
ns_adp_argv 10 MyDefault <i><br>
--&gt; returns &quot;MyDefault&quot; as there is no 10th
argument</i></p>

<p style="margin-left:11%; margin-top: 1em">The followiong
example demonstrates using the <i>-cache</i> and
<i>-nocache</i> options to the <b>ns_adp_include</b> command
to enhance performance through caching execution output.
Given the following files:</p>


<p style="margin-left:11%; margin-top: 1em"><i>top.adp:</i></p>

<p style="margin-left:22%;">&lt;% ns_adp_include -cache 60
cached.adp %&gt;</p>


<p style="margin-left:11%; margin-top: 1em"><i>cached.adp:</i></p>

<p style="margin-left:22%;">&lt;% <br>
ns_adp_puts &quot;Time at cache: [ns_time]&quot; <br>
ns_adp_include -nocache nocache.adp <br>
%&gt;</p>


<p style="margin-left:11%; margin-top: 1em"><i>nocache.adp:</i></p>

<p style="margin-left:22%;">&lt;% ns_adp_puts &quot;Time
now: [ns_time]&quot; %&gt;</p>

<p style="margin-left:11%; margin-top: 1em">the results of
<i>cached.adp</i> will only update once every 60 seconds
while the results of <i>nocache.adp</i> will be executed on
each request, even though it&rsquo;s included withing
<i>cached.adp</i>.</p>

<h2>SEE ALSO
<a name="SEE ALSO"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">ns_adp_ctl(1),
ns_adp_puts(n), ns_adp_flush(n), ns_adp_close(n)</p>

<h2>KEYWORDS
<a name="KEYWORDS"></a>
</h2>


<p style="margin-left:11%; margin-top: 1em">ADP, dynamic
pages, execution</p>
<hr>
</body>
</html>
